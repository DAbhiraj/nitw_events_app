

# spring:
#   application:
#     name: api-gateway
#   cloud:
#     gateway:
#       routes:
#         - id: auth-service
#           uri: lb://AUTH-SERVICE
#           predicates:
#             - Path=/api/auth/**

#         - id: view-serivce
#           uri: lb://view-serivce
#           predicates:
#             - Path=/api/events/public/**

#         - id: view-serivce-protected
#           uri: lb://view-serivce
#           predicates:
#             - Path=/api/events/**
#           filters:
#             - name: AuthenticationFilter
#               args: {}

#         - id: add_recruitments
#           uri: lb://add_recruitments
#           predicates:
#             - Path=/api/add_recruitments/**
#           filters:
#             - name: AuthenticationFilter
#               args: {}

#         - id: add-serivce
#           uri: lb://addevent-serivce
#           predicates:
#             - Path=/api/events/**
#           filters:
#             - name: AuthenticationFilter
#               args: {}

#         - id: profile-service
#           uri: lb://profile-service
#           predicates:
#             - Path=/api/profile/**
#           filters:
#             - name: AuthenticationFilter
#               args: {}

#         - id: clubs
#           uri: lb://CLUBS
#           predicates:
#             - Path=/api/clubs/public/**

#         - id: clubs
          # uri: lb://CLUBS
          # predicates:
          #   - Path=/api/clubs/**
          # filters:
          #   - name: AuthenticationFilter
          #     args: {}


spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      # Put CORS configuration before routes
      globalcors:
        add-to-simple-url-handler-mapping: true  # Add this line
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:5173"
            allowedMethods:
              - "GET"
              - "POST"
              - "PUT"
              - "DELETE"
              - "OPTIONS"
            allowedHeaders:
              - "Authorization"
              - "Content-Type"
              - "Accept"
            allowCredentials: true
            maxAge: 3600
      routes:
        # Public routes first
        - id: auth-public
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/auth/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin  # Add this line

        - id: events-public
          uri: lb://view-serivce
          predicates:
            - Path=/api/events/public/**


        - id: clubs-public
          uri: lb://CLUBS
          predicates:
            - Path=/api/clubs/public/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin

        # Protected routes after
        - id: events-protected
          uri: lb://view-serivce
          predicates:
            - Path=/api/viewevents/**
          filters:
            - AuthenticationFilter
            - DedupeResponseHeader=Access-Control-Allow-Origin

        - id: add-serivce
          uri: lb://addevent-service
          predicates:
                   - Path=/api/events/**
          filters:
            - AuthenticationFilter
            - DedupeResponseHeader=Access-Control-Allow-Origin


eureka:
  instance:
    hostname: localhost
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

jwt:
  secret: H8hS3jF5kL9qW7nE4zR6tU5yB2vM8pC1

       
